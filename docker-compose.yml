version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:3.2.2
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - 2181:2181
    expose:
      - 2181
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  kafka:
    image: confluentinc/cp-kafka:3.2.2
    tty: true
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - 9092:9092
      - 8082:8082
    depends_on:
      - zookeeper
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.app
  #   image: twashing/simple-kafka-onyx-commander:latest
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #   links:
  #     - kafka:kafka
  #     - zookeeper:zookeeper
  #   working_dir: ${PWD}
  #   shm_size: 2G
  #   ports:
  #     - 7888:7888
  #     - 8081:8081
  #   volumes:
  #     - .:${PWD}
  #   entrypoint: lein with-profile +app run -m com.interrupt.edgarly.core/-main
  # 
  # kafka-tools:
  #   image: confluentinc/cp-kafka:3.2.2
  #   tty: true
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   environment:
  #     - BOOTSTRAP_SERVERS=kafka:9092
  #     - ZOOKEEPER_CONNECT=zookeeper:2181
  #     - SCHEMA_REGISTRY_URL=http://schema-registry:8081
  #   working_dir: /usr/src/app
  #   entrypoint: /bin/bash
